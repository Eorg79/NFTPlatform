{
  "contractName": "CollectionFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_artistName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_collectionAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_timestamp",
          "type": "uint256"
        }
      ],
      "name": "CollectionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_artistName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_collectionAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"}],\"name\":\"CollectionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"If the contract is already deployed for an _artistName, it will revert.\",\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Give the ability to deploy a contract to manage ERC-721 tokens for an Artist. \",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CollectionFactory.sol\":\"CollectionFactory\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x921f012325281f7d81e29c53a13824cf6c2c5d77232065d0d4f3f912e97af6ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbcedc364fce0ab5e54d21d4cbd91a97959f52c0674cf5c36a314bb58308f62\",\"dweb:/ipfs/QmfYpqHKtu3bSQ9FGvLwzdxRNykStpVPtoLNTaM1KBKj6E\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x0d4de01fe5360c38b4ad2b0822a12722958428f5138a7ff47c1720eb6fa52bba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77724cecdfba8814632ab58737c2b0f2d4ad2d532bc614aee559b5593c1152f0\",\"dweb:/ipfs/QmUcE6gXyv7CQh4sUdcDABYKGTovTe1zLMZSEq95nkc3ph\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0x1cbe42915bc66227970fe99bc0f783eb1de30f2b48f984af01ad45edb9658698\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2baa08eb67d9da46e6c4c049f17b7684a1c68c5268d0f466cfa0eb23ce2bf9b0\",\"dweb:/ipfs/Qmdnj8zj4PfErB2HM2eKmDt7FrqrhggsZ6Qd8MpD593tgj\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8179c356adb19e70d6b31a1eedc8c5c7f0c00e669e2540f4099e3844c6074d30\",\"dweb:/ipfs/QmWFbivarEobbqhS1go64ootVuHfVohBseerYy9FTEd1W2\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/Collection.sol\":{\"keccak256\":\"0xda04d537a519f68faddf6e570598abae0696d0e3d4af23578b548fb50e80c77b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0f0b5cc5fcb8ef1c81557d13ddb77e48588951f1cba6f80781ad068f65140041\",\"dweb:/ipfs/QmevhKbCL9pjidjdWAJz1uLRyJsTeBLF3MCGpzWzL3REbp\"]},\"project:/contracts/CollectionData.sol\":{\"keccak256\":\"0x2a04592e61a82d7f58bf9d02825cf7d08ea23965b37bc105e676cfe846e8d5f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd0d745e8ba863aa0db091d8a72f21efd80b22d997a090666f5be81e2adb19a3\",\"dweb:/ipfs/QmXtQ5EGuVBhkeBfzYSm88EhNRd5p9XD9BcB6rehuyoZrH\"]},\"project:/contracts/CollectionFactory.sol\":{\"keccak256\":\"0x727506fd2f6063ef2e35e8dfe747cb826427e1b598d1302610c6cbb35c4752dd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b9efeba12149e7cab2cefd81e1be5142cea5553f745e99e023c8fab0bcbb89f\",\"dweb:/ipfs/QmXHT9bLGJQtRFzwq8mNDL6eMjNfuaYmMnMYg5QFdv7NDX\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610033610025640100000000610038810204565b64010000000061003c810204565b61008c565b3390565b60008054600160a060020a03838116600160a060020a0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61034a8061009b6000396000f3fe608060405234801561001057600080fd5b506004361061005d577c01000000000000000000000000000000000000000000000000000000006000350463715018a681146100625780638da5cb5b1461006c578063f2fde38b14610098575b600080fd5b61006a6100ab565b005b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61006a6100a63660046102d7565b61013d565b60005473ffffffffffffffffffffffffffffffffffffffff163314610131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61013b600061026d565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610128565b73ffffffffffffffffffffffffffffffffffffffff8116610261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610128565b61026a8161026d565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff83811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102e957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461030d57600080fd5b939250505056fea2646970667358221220bc555043c42b3541efa4869a526ac64bc1832ea6a289df1968193db5ae5ae99464736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061005d577c01000000000000000000000000000000000000000000000000000000006000350463715018a681146100625780638da5cb5b1461006c578063f2fde38b14610098575b600080fd5b61006a6100ab565b005b6000546040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61006a6100a63660046102d7565b61013d565b60005473ffffffffffffffffffffffffffffffffffffffff163314610131576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61013b600061026d565b565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610128565b73ffffffffffffffffffffffffffffffffffffffff8116610261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610128565b61026a8161026d565b50565b6000805473ffffffffffffffffffffffffffffffffffffffff83811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102e957600080fd5b813573ffffffffffffffffffffffffffffffffffffffff8116811461030d57600080fd5b939250505056fea2646970667358221220bc555043c42b3541efa4869a526ac64bc1832ea6a289df1968193db5ae5ae99464736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1324:20",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:20",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:125:20",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:20"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:20"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "190:42:20",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:55:20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:74:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:74:20"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:20",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:20",
                "type": ""
              }
            ],
            "src": "14:226:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "315:239:20",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "361:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "336:7:20"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "345:9:20"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "332:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "332:23:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "357:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "328:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "328:32:20"
                  },
                  "nodeType": "YulIf",
                  "src": "325:52:20"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "386:36:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "412:9:20"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "399:12:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:23:20"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "390:5:20",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "508:16:20",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "517:1:20",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "520:1:20",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "510:6:20"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "510:12:20"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "510:12:20"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "444:5:20"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "455:5:20"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "462:42:20",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "451:3:20"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "451:54:20"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "441:2:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "441:65:20"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "434:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:73:20"
                  },
                  "nodeType": "YulIf",
                  "src": "431:93:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "533:15:20",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "543:5:20"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "533:6:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "281:9:20",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "292:7:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "304:6:20",
                "type": ""
              }
            ],
            "src": "245:309:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:182:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "750:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "761:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "743:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "743:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "743:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "784:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "795:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "780:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "780:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "800:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "773:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "773:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "823:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "834:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "819:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "819:18:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "839:34:20",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "812:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "812:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "812:62:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "883:26:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "895:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "906:2:20",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "891:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "891:18:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "883:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "710:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "724:4:20",
                "type": ""
              }
            ],
            "src": "559:356:20"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1094:228:20",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1111:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1122:2:20",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1104:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1104:21:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1104:21:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1145:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1156:2:20",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1141:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1141:18:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1161:2:20",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1134:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1134:30:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1134:30:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1184:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1195:2:20",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1180:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1180:18:20"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1200:34:20",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1173:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1173:62:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1173:62:20"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1255:9:20"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1266:2:20",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1251:3:20"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1251:18:20"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1271:8:20",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1244:6:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1244:36:20"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1244:36:20"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1289:27:20",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1301:9:20"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1312:3:20",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1297:3:20"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1297:19:20"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1289:4:20"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1071:9:20",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1085:4:20",
                "type": ""
              }
            ],
            "src": "920:402:20"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 20,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "277:702:16:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;940:12;:10;;;;:12;:::i;:::-;921:18;;;;:32;:::i;:::-;277:702:16;;640:96:9;719:10;;640:96::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;277:702:16:-;;;;;;;",
  "deployedSourceMap": "277:702:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:0;;;:::i;:::-;;1036:85;1082:7;1108:6;1036:85;;;1108:6;;;;160:74:20;;1036:85:0;;;;;148:2:20;1036:85:0;;;1918:198;;;;;;:::i;:::-;;:::i;1668:101::-;1082:7;1108:6;1248:23;1108:6;719:10:9;1248:23:0;1240:68;;;;;;;761:2:20;1240:68:0;;;743:21:20;;;780:18;;;773:30;839:34;819:18;;;812:62;891:18;;1240:68:0;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1918:198::-;1082:7;1108:6;1248:23;1108:6;719:10:9;1248:23:0;1240:68;;;;;;;761:2:20;1240:68:0;;;743:21:20;;;780:18;;;773:30;839:34;819:18;;;812:62;891:18;;1240:68:0;559:356:20;1240:68:0;2006:22:::1;::::0;::::1;1998:73;;;::::0;::::1;::::0;;1122:2:20;1998:73:0::1;::::0;::::1;1104:21:20::0;1161:2;1141:18;;;1134:30;1200:34;1180:18;;;1173:62;1271:8;1251:18;;;1244:36;1297:19;;1998:73:0::1;920:402:20::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2270:187::-;2343:16;2362:6;;;2378:17;;;-1:-1:-1;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;245:309:20:-;304:6;357:2;345:9;336:7;332:23;328:32;325:52;;;373:1;370;363:12;325:52;412:9;399:23;462:42;455:5;451:54;444:5;441:65;431:93;;520:1;517;510:12;431:93;543:5;245:309;-1:-1:-1;;;245:309:20:o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.13;\r\nimport \"./Collection.sol\";\r\n\r\n/** \r\n  * @notice Give the ability to deploy a contract to manage ERC-721 tokens for an Artist. \r\n  * @dev    If the contract is already deployed for an _artistName, it will revert.\r\n  */\r\ncontract CollectionFactory is Ownable{\r\n    event CollectionCreated(\r\n        address _owner,\r\n        string _artistName,\r\n        address _collectionAddress,\r\n        uint _timestamp\r\n    );\r\n\r\n /**\r\n      * @notice Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later\r\n      * @return collection the address of the created collection contract\r\n      */\r\n    \r\n    function createCollectionFactory(string memory name, string memory symbol, address creatorAddress) internal returns (Collection collection) {\r\n        collection = new Collection(name, symbol);\r\n        emit CollectionCreated(creatorAddress, name, address(collection), block.timestamp);\r\n    }\r\n}\r\n        /*\r\n        // Import the bytecode of the contract to deploy\r\n        bytes memory collectionBytecode = type(Collection).creationCode;\r\n\t\t\t\t// Make a random salt based on the artist name\r\n        bytes32 salt = keccak256(abi.encodePacked(_artistName));\r\n \r\n        assembly {\r\n            collectionAddress := create2(0, add(collectionBytecode, 0x20), mload(collectionBytecode), salt)\r\n            if iszero(extcodesize(collectionAddress)) {\r\n                // revert if something gone wrong (collectionAddress doesn't contain an address)\r\n                revert(0, 0)\r\n            }\r\n        }\r\n        // Initialize the collection contract with the artist settings\r\n        //Collection(collectionAddress).init(_artistName, _artistSymbol);\r\n      \r\n        emit CollectionCreated(_artistName, collectionAddress, block.timestamp);*/\r\n\r\n\r\n",
  "sourcePath": "/home/ludo/github/NFTPlatform/contracts/CollectionFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/CollectionFactory.sol",
    "exportedSymbols": {
      "Address": [
        1923
      ],
      "Collection": [
        2453
      ],
      "CollectionData": [
        2463
      ],
      "CollectionFactory": [
        2514
      ],
      "Context": [
        1945
      ],
      "Counters": [
        2019
      ],
      "ERC165": [
        2246
      ],
      "ERC721": [
        970
      ],
      "ERC721Enumerable": [
        1442
      ],
      "ERC721URIStorage": [
        1570
      ],
      "IERC165": [
        2258
      ],
      "IERC721": [
        1086
      ],
      "IERC721Enumerable": [
        1601
      ],
      "IERC721Metadata": [
        1628
      ],
      "IERC721Receiver": [
        1104
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        2222
      ]
    },
    "id": 2515,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2465,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:16"
      },
      {
        "absolutePath": "project:/contracts/Collection.sol",
        "file": "./Collection.sol",
        "id": 2466,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2515,
        "sourceUnit": 2454,
        "src": "58:26:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2468,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "307:7:16"
            },
            "id": 2469,
            "nodeType": "InheritanceSpecifier",
            "src": "307:7:16"
          }
        ],
        "canonicalName": "CollectionFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2467,
          "nodeType": "StructuredDocumentation",
          "src": "88:187:16",
          "text": " @notice Give the ability to deploy a contract to manage ERC-721 tokens for an Artist. \n @dev    If the contract is already deployed for an _artistName, it will revert."
        },
        "fullyImplemented": true,
        "id": 2514,
        "linearizedBaseContracts": [
          2514,
          104,
          1945
        ],
        "name": "CollectionFactory",
        "nameLocation": "286:17:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "e19d8d04e5734b7d9524339d0e610412d19224aee9dfd3813cfb37feb9af098f",
            "id": 2479,
            "name": "CollectionCreated",
            "nameLocation": "327:17:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2471,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "363:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2479,
                  "src": "355:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2473,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_artistName",
                  "nameLocation": "387:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2479,
                  "src": "380:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2472,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2475,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "417:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2479,
                  "src": "409:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2477,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "451:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2479,
                  "src": "446:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2476,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "344:124:16"
            },
            "src": "321:148:16"
          },
          {
            "body": {
              "id": 2512,
              "nodeType": "Block",
              "src": "823:153:16",
              "statements": [
                {
                  "expression": {
                    "id": 2499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2492,
                      "name": "collection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "834:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Collection_$2453",
                        "typeString": "contract Collection"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2496,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2482,
                          "src": "862:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 2497,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2484,
                          "src": "868:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 2495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "847:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Collection_$2453_$",
                          "typeString": "function (string memory,string memory) returns (contract Collection)"
                        },
                        "typeName": {
                          "id": 2494,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2493,
                            "name": "Collection",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "851:10:16"
                          },
                          "referencedDeclaration": 2453,
                          "src": "851:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Collection_$2453",
                            "typeString": "contract Collection"
                          }
                        }
                      },
                      "id": 2498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "847:28:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Collection_$2453",
                        "typeString": "contract Collection"
                      }
                    },
                    "src": "834:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Collection_$2453",
                      "typeString": "contract Collection"
                    }
                  },
                  "id": 2500,
                  "nodeType": "ExpressionStatement",
                  "src": "834:41:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2502,
                        "name": "creatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2486,
                        "src": "909:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2503,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "925:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2506,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "939:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Collection_$2453",
                              "typeString": "contract Collection"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Collection_$2453",
                              "typeString": "contract Collection"
                            }
                          ],
                          "id": 2505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "931:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2504,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "931:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "931:19:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2508,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "952:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "952:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2501,
                      "name": "CollectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2479,
                      "src": "891:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,address,uint256)"
                      }
                    },
                    "id": 2510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "891:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2511,
                  "nodeType": "EmitStatement",
                  "src": "886:82:16"
                }
              ]
            },
            "documentation": {
              "id": 2480,
              "nodeType": "StructuredDocumentation",
              "src": "474:197:16",
              "text": " @notice Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later\n @return collection the address of the created collection contract"
            },
            "id": 2513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollectionFactory",
            "nameLocation": "692:23:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2482,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "730:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "716:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2481,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2484,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "750:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "736:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2483,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2486,
                  "mutability": "mutable",
                  "name": "creatorAddress",
                  "nameLocation": "766:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "758:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "715:66:16"
            },
            "returnParameters": {
              "id": 2491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2490,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "811:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "800:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Collection_$2453",
                    "typeString": "contract Collection"
                  },
                  "typeName": {
                    "id": 2489,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2488,
                      "name": "Collection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2453,
                      "src": "800:10:16"
                    },
                    "referencedDeclaration": 2453,
                    "src": "800:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Collection_$2453",
                      "typeString": "contract Collection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "799:23:16"
            },
            "scope": 2514,
            "src": "683:293:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2515,
        "src": "277:702:16",
        "usedErrors": []
      }
    ],
    "src": "33:1796:16"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CollectionFactory.sol",
    "exportedSymbols": {
      "Address": [
        1923
      ],
      "Collection": [
        2453
      ],
      "CollectionData": [
        2463
      ],
      "CollectionFactory": [
        2514
      ],
      "Context": [
        1945
      ],
      "Counters": [
        2019
      ],
      "ERC165": [
        2246
      ],
      "ERC721": [
        970
      ],
      "ERC721Enumerable": [
        1442
      ],
      "ERC721URIStorage": [
        1570
      ],
      "IERC165": [
        2258
      ],
      "IERC721": [
        1086
      ],
      "IERC721Enumerable": [
        1601
      ],
      "IERC721Metadata": [
        1628
      ],
      "IERC721Receiver": [
        1104
      ],
      "Ownable": [
        104
      ],
      "Strings": [
        2222
      ]
    },
    "id": 2515,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2465,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:16"
      },
      {
        "absolutePath": "project:/contracts/Collection.sol",
        "file": "./Collection.sol",
        "id": 2466,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2515,
        "sourceUnit": 2454,
        "src": "58:26:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2468,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 104,
              "src": "307:7:16"
            },
            "id": 2469,
            "nodeType": "InheritanceSpecifier",
            "src": "307:7:16"
          }
        ],
        "canonicalName": "CollectionFactory",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2467,
          "nodeType": "StructuredDocumentation",
          "src": "88:187:16",
          "text": " @notice Give the ability to deploy a contract to manage ERC-721 tokens for an Artist. \n @dev    If the contract is already deployed for an _artistName, it will revert."
        },
        "fullyImplemented": true,
        "id": 2514,
        "linearizedBaseContracts": [
          2514,
          104,
          1945
        ],
        "name": "CollectionFactory",
        "nameLocation": "286:17:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "eventSelector": "e19d8d04e5734b7d9524339d0e610412d19224aee9dfd3813cfb37feb9af098f",
            "id": 2479,
            "name": "CollectionCreated",
            "nameLocation": "327:17:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2471,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "363:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2479,
                  "src": "355:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2473,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_artistName",
                  "nameLocation": "387:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2479,
                  "src": "380:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2472,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "380:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2475,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_collectionAddress",
                  "nameLocation": "417:18:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2479,
                  "src": "409:26:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "409:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2477,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "451:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2479,
                  "src": "446:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2476,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "446:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "344:124:16"
            },
            "src": "321:148:16"
          },
          {
            "body": {
              "id": 2512,
              "nodeType": "Block",
              "src": "823:153:16",
              "statements": [
                {
                  "expression": {
                    "id": 2499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2492,
                      "name": "collection",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2490,
                      "src": "834:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Collection_$2453",
                        "typeString": "contract Collection"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2496,
                          "name": "name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2482,
                          "src": "862:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        {
                          "id": 2497,
                          "name": "symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2484,
                          "src": "868:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          },
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 2495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "847:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_Collection_$2453_$",
                          "typeString": "function (string memory,string memory) returns (contract Collection)"
                        },
                        "typeName": {
                          "id": 2494,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2493,
                            "name": "Collection",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2453,
                            "src": "851:10:16"
                          },
                          "referencedDeclaration": 2453,
                          "src": "851:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Collection_$2453",
                            "typeString": "contract Collection"
                          }
                        }
                      },
                      "id": 2498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "847:28:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Collection_$2453",
                        "typeString": "contract Collection"
                      }
                    },
                    "src": "834:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Collection_$2453",
                      "typeString": "contract Collection"
                    }
                  },
                  "id": 2500,
                  "nodeType": "ExpressionStatement",
                  "src": "834:41:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 2502,
                        "name": "creatorAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2486,
                        "src": "909:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2503,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2482,
                        "src": "925:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2506,
                            "name": "collection",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2490,
                            "src": "939:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Collection_$2453",
                              "typeString": "contract Collection"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Collection_$2453",
                              "typeString": "contract Collection"
                            }
                          ],
                          "id": 2505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "931:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2504,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "931:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "931:19:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 2508,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "952:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 2509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "952:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2501,
                      "name": "CollectionCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2479,
                      "src": "891:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,string memory,address,uint256)"
                      }
                    },
                    "id": 2510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "891:77:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2511,
                  "nodeType": "EmitStatement",
                  "src": "886:82:16"
                }
              ]
            },
            "documentation": {
              "id": 2480,
              "nodeType": "StructuredDocumentation",
              "src": "474:197:16",
              "text": " @notice Deploy the ERC-721 Collection contract of the artist caller to be able to create NFTs later\n @return collection the address of the created collection contract"
            },
            "id": 2513,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createCollectionFactory",
            "nameLocation": "692:23:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2482,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "730:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "716:18:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2481,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "716:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2484,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "750:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "736:20:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2483,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "736:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2486,
                  "mutability": "mutable",
                  "name": "creatorAddress",
                  "nameLocation": "766:14:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "758:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2485,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "758:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "715:66:16"
            },
            "returnParameters": {
              "id": 2491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2490,
                  "mutability": "mutable",
                  "name": "collection",
                  "nameLocation": "811:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 2513,
                  "src": "800:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Collection_$2453",
                    "typeString": "contract Collection"
                  },
                  "typeName": {
                    "id": 2489,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2488,
                      "name": "Collection",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2453,
                      "src": "800:10:16"
                    },
                    "referencedDeclaration": 2453,
                    "src": "800:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Collection_$2453",
                      "typeString": "contract Collection"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "799:23:16"
            },
            "scope": 2514,
            "src": "683:293:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2515,
        "src": "277:702:16",
        "usedErrors": []
      }
    ],
    "src": "33:1796:16"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {
    "1652041342688": {
      "events": {
        "0xe19d8d04e5734b7d9524339d0e610412d19224aee9dfd3813cfb37feb9af098f": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_artistName",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "_collectionAddress",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_timestamp",
              "type": "uint256"
            }
          ],
          "name": "CollectionCreated",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xC2E352c61E81F3323ba1D1052E74Cc34FF02B80f",
      "transactionHash": "0xcbc45e166e61ac270694629afa3f854cd1cdde6b03a165b3aeea2c7e21f5c346"
    },
    "1652087210228": {
      "events": {},
      "links": {},
      "address": "0x48535d26a25413480e0b0078f177ea75d7f13A91",
      "transactionHash": "0x256b1b3048f362ea48b0a2604c2a22f1d59643ce58060a6c0b61202631fab4c3"
    }
  },
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-09T12:42:33.583Z",
  "devdoc": {
    "details": "If the contract is already deployed for an _artistName, it will revert.",
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Give the ability to deploy a contract to manage ERC-721 tokens for an Artist. ",
    "version": 1
  }
}